function getBootEntry(){return loader.config.scriptProps.getOrDefault("boot.entry","net.mamoe.mirai.console.terminal.MiraiConsoleTerminalLoader")}function getBootArgs(){return loader.config.scriptProps.getOrDefault("boot.args","")}importPackage(java.io),importPackage(java.lang),importPackage(java.util),importPackage(org.itxtech.mcl),importPackage(org.itxtech.mcl.component),importPackage(org.apache.commons.cli),loader.options.addOption(Option.builder("b").desc("Show Mirai Console boot properties").longOpt("show-boot-props").build()),loader.options.addOption(Option.builder("f").desc("Set Mirai Console boot entry").longOpt("set-boot-entry").hasArg().argName("EntryClass").build()),loader.options.addOption(Option.builder("g").desc("Set Mirai Console boot arguments").longOpt("set-boot-args").optionalArg(!0).hasArg().argName("Arguments").build()),phase.cli=(()=>{loader.cli.hasOption("f")&&(loader.config.scriptProps.put("boot.entry",loader.cli.getOptionValue("f")),loader.saveConfig()),loader.cli.hasOption("g")&&(loader.config.scriptProps.put("boot.args",loader.cli.getOptionValue("g","")),loader.saveConfig()),loader.cli.hasOption("b")&&(logger.info("Mirai Console boot entry: "+getBootEntry()),logger.info("Mirai Console boot arguments: "+getBootArgs()),System.exit(0))});let depMap=new HashMap;depMap.put("net.mamoe:mirai-core","net.mamoe:mirai-core-all"),phase.boot=(()=>{let e=[],o=loader.config.packages,t=new HashMap;for(let a in o){let r=o[a];if(r.type.equals(Config.Package.TYPE_CORE)&&(e.push(new File(new File(r.type),r.getBasename()+".jar")),t.put(r.id,r.version)),r.type.equals(Config.Package.TYPE_PLUGIN)){let e=new File(new File(r.type),r.getBasename()+".metadata");if(e.exists()){let o=loader.repo.getMetadataFromFile(e).dependencies.iterator();for(;o.hasNext();){let e=o.next().split(":"),a=e[0]+":"+e[1],i=e[2],n=depMap.getOrDefault(a,a),l=t.entrySet().iterator();for(;l.hasNext();){let e=l.next();e.getKey().equals(n)&&!e.getValue().equals(i)&&logger.warning('Package "'+r.id+'" requires "'+a+'" version '+i+". Current version is "+e.getValue())}}}}}Utility.bootMirai(e,getBootEntry(),getBootArgs())});