importPackage(java.lang),importPackage(org.itxtech.mcl),importPackage(org.itxtech.mcl.component),importPackage(org.apache.commons.cli);let group=new OptionGroup;group.addOption(Option.builder("i").desc("Fetch info for specified package").longOpt("package-info").hasArg().argName("PackageName").build()),group.addOption(Option.builder("j").desc("List available packages in Mirai Repo").longOpt("list-repo-packages").build()),loader.options.addOptionGroup(group),phase.cli=(()=>{let e=new Repository(loader);if(loader.cli.hasOption("j")){logger.info("Fetching packages from "+loader.config.miraiRepo);let o=e.fetchPackages().entrySet().iterator();for(;o.hasNext();){let e=o.next(),i=e.getValue();logger.info("---------- Package: "+e.getKey()+" ----------"),logger.info("Name: "+i.name),logger.info("Description: "+i.description),logger.info("Website: "+i.website),logger.info("Channels: "+Utility.join(", ",i.channels)),logger.info("")}System.exit(0)}if(loader.cli.hasOption("i")){let o=loader.cli.getOptionValue("i");logger.info('Fetching channel info for package "'+o+'"');let i=e.fetchPackage(o).channels.entrySet().iterator();for(;i.hasNext();){let e=i.next();logger.info("---------- Channel: "+e.getKey()+" ----------"),logger.info("Version: "+Utility.join(", ",e.getValue())),logger.info("")}System.exit(0)}});